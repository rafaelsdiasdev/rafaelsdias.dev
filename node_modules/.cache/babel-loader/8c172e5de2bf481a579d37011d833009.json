{"ast":null,"code":"var _jsxFileName = \"/home/rafaeldias/projects/rafaelsdias.dev/src/components/Pages/index.js\",\n    _s = $RefreshSig$();\n\n// import SliderPage from 'react-slider-page';\nimport PageSlider from '../PageSlider';\nimport Home from '../Home';\nimport About from '../About';\nimport Prismic from '@prismicio/client';\nimport { getPrismicClient } from '../../services/prismic';\nimport { RichText } from 'prismic-dom';\nimport styles from './styles.module.css';\nimport Skills from '../Skills';\nimport Projects from '../Projects';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pages = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const prismic = getPrismicClient();\n  useEffect(() => {\n    const getUser = async () => {\n      const response = await prismic.query([Prismic.predicates.at('document.type', 'user-info')], {\n        fetch: ['user-info.photo', 'user-info.first-name', 'user-info.last-name', 'user-info.occupation', 'user-info.photo', 'user-info.location', 'user-info.phone', 'user-info.email', 'user-info.github', 'user-info.linkedin', 'user.about', 'user.skils'],\n        pageSize: 100\n      });\n      const userData = response.results.map(user => {\n        return {\n          slug: user.uid,\n          firstName: RichText.asText(user.data['first-name']),\n          lastName: RichText.asText(user.data['last-name']),\n          occupation: RichText.asText(user.data.occupation),\n          phone: RichText.asText(user.data.phone),\n          photo: user.data.photo.url,\n          location: RichText.asText(user.data.location),\n          email: RichText.asText(user.data.email),\n          github: RichText.asText(user.data.github),\n          linkedin: RichText.asText(user.data.linkedin)\n        };\n      });\n      setData(userData);\n    };\n\n    getUser();\n  }, [prismic]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(PageSlider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"home\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"about\",\n        children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"skills\",\n        children: /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"projects\",\n        children: /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pages, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = Pages;\nexport default Pages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pages\");","map":{"version":3,"sources":["/home/rafaeldias/projects/rafaelsdias.dev/src/components/Pages/index.js"],"names":["PageSlider","Home","About","Prismic","getPrismicClient","RichText","styles","Skills","Projects","useEffect","useState","Pages","data","setData","prismic","getUser","response","query","predicates","at","fetch","pageSize","userData","results","map","user","slug","uid","firstName","asText","lastName","occupation","phone","photo","url","location","email","github","linkedin","container"],"mappings":"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","sourcesContent":["// import SliderPage from 'react-slider-page';\nimport PageSlider from '../PageSlider';\nimport Home from '../Home';\nimport About from '../About';\nimport Prismic from '@prismicio/client';\nimport { getPrismicClient } from '../../services/prismic';\nimport { RichText } from 'prismic-dom';\n\nimport styles from './styles.module.css';\nimport Skills from '../Skills';\nimport Projects from '../Projects';\nimport { useEffect, useState } from 'react';\n\nconst Pages = () => {\n  const [data, setData] = useState(null);\n  const prismic = getPrismicClient();\n\n  useEffect(() => {\n    const getUser = async () => {\n      const response = await prismic.query(\n        [Prismic.predicates.at('document.type', 'user-info')],\n        {\n          fetch: [\n            'user-info.photo',\n            'user-info.first-name',\n            'user-info.last-name',\n            'user-info.occupation',\n            'user-info.photo',\n            'user-info.location',\n            'user-info.phone',\n            'user-info.email',\n            'user-info.github',\n            'user-info.linkedin',\n            'user.about',\n            'user.skils',\n          ],\n          pageSize: 100,\n        },\n      );\n\n      const userData = response.results.map((user) => {\n        return {\n          slug: user.uid,\n          firstName: RichText.asText(user.data['first-name']),\n          lastName: RichText.asText(user.data['last-name']),\n          occupation: RichText.asText(user.data.occupation),\n          phone: RichText.asText(user.data.phone),\n          photo: user.data.photo.url,\n          location: RichText.asText(user.data.location),\n          email: RichText.asText(user.data.email),\n          github: RichText.asText(user.data.github),\n          linkedin: RichText.asText(user.data.linkedin),\n        };\n      });\n\n      setData(userData);\n    };\n\n    getUser();\n  }, [prismic]);\n\n  return (\n    <div className={styles.container}>\n      <PageSlider>\n        <div id=\"home\">\n          <Home data={data} />\n        </div>\n        <div id=\"about\">\n          <About />\n        </div>\n        <div id=\"skills\">\n          <Skills />\n        </div>\n        <div id=\"projects\">\n          <Projects />\n        </div>\n      </PageSlider>\n    </div>\n  );\n};\n\nexport default Pages;\n"]},"metadata":{},"sourceType":"module"}
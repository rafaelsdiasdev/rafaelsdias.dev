{"ast":null,"code":"var _jsxFileName = \"/home/rafaeldias/projects/rafaelsdias.dev/src/components/Pages/index.js\",\n    _s = $RefreshSig$();\n\n// import SliderPage from 'react-slider-page';\nimport PageSlider from '../PageSlider';\nimport Home from '../Home';\nimport About from '../About';\nimport Prismic from '@prismicio/client';\nimport { getPrismicClient } from '../../services/prismic';\nimport { RichText } from 'prismic-dom';\nimport styles from './styles.module.css';\nimport Skills from '../Skills';\nimport Projects from '../Projects';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pages = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const prismic = getPrismicClient();\n  useEffect(() => {\n    const getUser = async () => {\n      const projects = await prismic.query([Prismic.predicates.at('document.type', 'projects')], {\n        fetch: ['projects.title', 'projects.description', 'projects.url', 'projects.github'],\n        pageSize: 100\n      });\n      const projectsData = projects.results.map(project => {\n        return {\n          slug: project.uid,\n          title: RichText.asText(project.data.title),\n          description: RichText.asText(project.data.description),\n          url: RichText.asText(project.data.url),\n          github: RichText.asText(project.data.github)\n        };\n      });\n      const userInfo = await prismic.query([Prismic.predicates.at('document.type', 'user-info')], {\n        fetch: ['user-info.photo', 'user-info.first-name', 'user-info.last-name', 'user-info.occupation', 'user-info.photo', 'user-info.location', 'user-info.phone', 'user-info.email', 'user-info.github', 'user-info.linkedin', 'user-info.about', 'user-info.skills'],\n        pageSize: 100\n      });\n      const userData = userInfo.results.map(user => {\n        return {\n          slug: user.uid,\n          firstName: RichText.asText(user.data['first-name']),\n          lastName: RichText.asText(user.data['last-name']),\n          occupation: RichText.asText(user.data.occupation),\n          phone: RichText.asText(user.data.phone),\n          photo: user.data.photo.url,\n          location: RichText.asText(user.data.location),\n          email: RichText.asText(user.data.email),\n          github: RichText.asText(user.data.github),\n          linkedin: RichText.asText(user.data.linkedin),\n          about: RichText.asText(user.data.about),\n          skillsList1: RichText.asText(user.data.skills[0].list).split(' '),\n          skillsList2: RichText.asText(user.data.skills[1].list).split(' '),\n          skillsList3: RichText.asText(user.data.skills[2].list).split(' ')\n        };\n      }); // console.log(JSON.stringify(userInfo, null, 2));\n\n      console.log(JSON.stringify(projectsData, null, 2)); // console.log(userData);\n\n      setData(userData);\n    };\n\n    getUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(PageSlider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"home\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"about\",\n        children: /*#__PURE__*/_jsxDEV(About, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"skills\",\n        children: /*#__PURE__*/_jsxDEV(Skills, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"projects\",\n        children: /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pages, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = Pages;\nexport default Pages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pages\");","map":{"version":3,"sources":["/home/rafaeldias/projects/rafaelsdias.dev/src/components/Pages/index.js"],"names":["PageSlider","Home","About","Prismic","getPrismicClient","RichText","styles","Skills","Projects","useEffect","useState","Pages","data","setData","prismic","getUser","projects","query","predicates","at","fetch","pageSize","projectsData","results","map","project","slug","uid","title","asText","description","url","github","userInfo","userData","user","firstName","lastName","occupation","phone","photo","location","email","linkedin","about","skillsList1","skills","list","split","skillsList2","skillsList3","console","log","JSON","stringify","container"],"mappings":";;;AAAA;AACA,OAAOA,UAAP,MAAuB,eAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMI,OAAO,GAAGV,gBAAgB,EAAhC;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,OAAO,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,KAAR,CACrB,CAACd,OAAO,CAACe,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,UAAvC,CAAD,CADqB,EAErB;AACEC,QAAAA,KAAK,EAAE,CACL,gBADK,EAEL,sBAFK,EAGL,cAHK,EAIL,iBAJK,CADT;AAOEC,QAAAA,QAAQ,EAAE;AAPZ,OAFqB,CAAvB;AAaA,YAAMC,YAAY,GAAGN,QAAQ,CAACO,OAAT,CAAiBC,GAAjB,CAAsBC,OAAD,IAAa;AACrD,eAAO;AACLC,UAAAA,IAAI,EAAED,OAAO,CAACE,GADT;AAELC,UAAAA,KAAK,EAAEvB,QAAQ,CAACwB,MAAT,CAAgBJ,OAAO,CAACb,IAAR,CAAagB,KAA7B,CAFF;AAGLE,UAAAA,WAAW,EAAEzB,QAAQ,CAACwB,MAAT,CAAgBJ,OAAO,CAACb,IAAR,CAAakB,WAA7B,CAHR;AAILC,UAAAA,GAAG,EAAE1B,QAAQ,CAACwB,MAAT,CAAgBJ,OAAO,CAACb,IAAR,CAAamB,GAA7B,CAJA;AAKLC,UAAAA,MAAM,EAAE3B,QAAQ,CAACwB,MAAT,CAAgBJ,OAAO,CAACb,IAAR,CAAaoB,MAA7B;AALH,SAAP;AAOD,OARoB,CAArB;AAUA,YAAMC,QAAQ,GAAG,MAAMnB,OAAO,CAACG,KAAR,CACrB,CAACd,OAAO,CAACe,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,WAAvC,CAAD,CADqB,EAErB;AACEC,QAAAA,KAAK,EAAE,CACL,iBADK,EAEL,sBAFK,EAGL,qBAHK,EAIL,sBAJK,EAKL,iBALK,EAML,oBANK,EAOL,iBAPK,EAQL,iBARK,EASL,kBATK,EAUL,oBAVK,EAWL,iBAXK,EAYL,kBAZK,CADT;AAeEC,QAAAA,QAAQ,EAAE;AAfZ,OAFqB,CAAvB;AAqBA,YAAMa,QAAQ,GAAGD,QAAQ,CAACV,OAAT,CAAiBC,GAAjB,CAAsBW,IAAD,IAAU;AAC9C,eAAO;AACLT,UAAAA,IAAI,EAAES,IAAI,CAACR,GADN;AAELS,UAAAA,SAAS,EAAE/B,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAU,YAAV,CAAhB,CAFN;AAGLyB,UAAAA,QAAQ,EAAEhC,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAU,WAAV,CAAhB,CAHL;AAIL0B,UAAAA,UAAU,EAAEjC,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAU0B,UAA1B,CAJP;AAKLC,UAAAA,KAAK,EAAElC,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAU2B,KAA1B,CALF;AAMLC,UAAAA,KAAK,EAAEL,IAAI,CAACvB,IAAL,CAAU4B,KAAV,CAAgBT,GANlB;AAOLU,UAAAA,QAAQ,EAAEpC,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAU6B,QAA1B,CAPL;AAQLC,UAAAA,KAAK,EAAErC,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAU8B,KAA1B,CARF;AASLV,UAAAA,MAAM,EAAE3B,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAUoB,MAA1B,CATH;AAULW,UAAAA,QAAQ,EAAEtC,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAU+B,QAA1B,CAVL;AAWLC,UAAAA,KAAK,EAAEvC,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAUgC,KAA1B,CAXF;AAYLC,UAAAA,WAAW,EAAExC,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAUkC,MAAV,CAAiB,CAAjB,EAAoBC,IAApC,EAA0CC,KAA1C,CAAgD,GAAhD,CAZR;AAaLC,UAAAA,WAAW,EAAE5C,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAUkC,MAAV,CAAiB,CAAjB,EAAoBC,IAApC,EAA0CC,KAA1C,CAAgD,GAAhD,CAbR;AAcLE,UAAAA,WAAW,EAAE7C,QAAQ,CAACwB,MAAT,CAAgBM,IAAI,CAACvB,IAAL,CAAUkC,MAAV,CAAiB,CAAjB,EAAoBC,IAApC,EAA0CC,KAA1C,CAAgD,GAAhD;AAdR,SAAP;AAgBD,OAjBgB,CAAjB,CA7C0B,CAgE1B;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAehC,YAAf,EAA6B,IAA7B,EAAmC,CAAnC,CAAZ,EAjE0B,CAkE1B;;AAEAT,MAAAA,OAAO,CAACqB,QAAD,CAAP;AACD,KArED;;AAuEAnB,IAAAA,OAAO;AACR,GAzEQ,EAyEN,EAzEM,CAAT;AA2EA,sBACE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACiD,SAAvB;AAAA,2BACE,QAAC,UAAD;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE3C;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAjGD;;GAAMD,K;;KAAAA,K;AAmGN,eAAeA,KAAf","sourcesContent":["// import SliderPage from 'react-slider-page';\nimport PageSlider from '../PageSlider';\nimport Home from '../Home';\nimport About from '../About';\nimport Prismic from '@prismicio/client';\nimport { getPrismicClient } from '../../services/prismic';\nimport { RichText } from 'prismic-dom';\n\nimport styles from './styles.module.css';\nimport Skills from '../Skills';\nimport Projects from '../Projects';\nimport { useEffect, useState } from 'react';\n\nconst Pages = () => {\n  const [data, setData] = useState(null);\n  const prismic = getPrismicClient();\n\n  useEffect(() => {\n    const getUser = async () => {\n      const projects = await prismic.query(\n        [Prismic.predicates.at('document.type', 'projects')],\n        {\n          fetch: [\n            'projects.title',\n            'projects.description',\n            'projects.url',\n            'projects.github',\n          ],\n          pageSize: 100,\n        },\n      );\n\n      const projectsData = projects.results.map((project) => {\n        return {\n          slug: project.uid,\n          title: RichText.asText(project.data.title),\n          description: RichText.asText(project.data.description),\n          url: RichText.asText(project.data.url),\n          github: RichText.asText(project.data.github),\n        };\n      });\n\n      const userInfo = await prismic.query(\n        [Prismic.predicates.at('document.type', 'user-info')],\n        {\n          fetch: [\n            'user-info.photo',\n            'user-info.first-name',\n            'user-info.last-name',\n            'user-info.occupation',\n            'user-info.photo',\n            'user-info.location',\n            'user-info.phone',\n            'user-info.email',\n            'user-info.github',\n            'user-info.linkedin',\n            'user-info.about',\n            'user-info.skills',\n          ],\n          pageSize: 100,\n        },\n      );\n\n      const userData = userInfo.results.map((user) => {\n        return {\n          slug: user.uid,\n          firstName: RichText.asText(user.data['first-name']),\n          lastName: RichText.asText(user.data['last-name']),\n          occupation: RichText.asText(user.data.occupation),\n          phone: RichText.asText(user.data.phone),\n          photo: user.data.photo.url,\n          location: RichText.asText(user.data.location),\n          email: RichText.asText(user.data.email),\n          github: RichText.asText(user.data.github),\n          linkedin: RichText.asText(user.data.linkedin),\n          about: RichText.asText(user.data.about),\n          skillsList1: RichText.asText(user.data.skills[0].list).split(' '),\n          skillsList2: RichText.asText(user.data.skills[1].list).split(' '),\n          skillsList3: RichText.asText(user.data.skills[2].list).split(' '),\n        };\n      });\n\n      // console.log(JSON.stringify(userInfo, null, 2));\n      console.log(JSON.stringify(projectsData, null, 2));\n      // console.log(userData);\n\n      setData(userData);\n    };\n\n    getUser();\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <PageSlider>\n        <div id=\"home\">\n          <Home data={data} />\n        </div>\n        <div id=\"about\">\n          <About data={data} />\n        </div>\n        <div id=\"skills\">\n          <Skills data={data} />\n        </div>\n        <div id=\"projects\">\n          <Projects />\n        </div>\n      </PageSlider>\n    </div>\n  );\n};\n\nexport default Pages;\n"]},"metadata":{},"sourceType":"module"}
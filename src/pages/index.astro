---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import PostCard from '../components/PostCard.astro';
import { SITE_DESCRIPTION, SITE_TITLE, AUTHOR_NAME, AUTHOR_BIO } from '../consts';
import { getCollection } from 'astro:content';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="pt-BR">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body class="bg-gray-50 text-gray-900 antialiased">
		<Header />
		<main class="min-h-screen">
			<div class="container py-8">
				<section class="hero-section">
					<h1 class="hero-name">
						{AUTHOR_NAME}
					</h1>
					<p class="hero-tagline">
						Technical Blog 
					</p>
				</section>

				{posts.length > 0 && (
					<>
						{/* Post em Destaque */}
						<section class="mb-16">
							<h2 class="section-title mb-8">
								Artigo em Destaque
							</h2>
							<PostCard post={posts[0]} featured={true} />
						</section>

						{/* Posts em Grid (excluindo o primeiro que já está em destaque) */}
						{posts.length > 1 && (
							<section class="mb-16">
								<h2 class="section-title mb-8">
									Outros Artigos Recentes
								</h2>
								<div class="posts-grid">
									{posts.slice(1).map((post) => (
										<PostCard post={post} />
									))}
								</div>
							</section>
						)}
					</>
				)}

				<section>
					<h2 class="section-title mb-8">
						Áreas de Especialização
					</h2>
					<div class="topics-grid">
						<a href="/blog?categoria=arquitetura" class="topic-card">
							<h3 class="topic-title">
								Arquitetura de Sistemas
							</h3>
							<p class="topic-description">
								CQRS, Event Sourcing e padrões arquiteturais
							</p>
							<span class="topic-count">
								{posts.filter(p => p.data.tags?.includes('arquitetura')).length} artigos
							</span>
						</a>
						<a href="/blog?categoria=sistemas-distribuidos" class="topic-card">
							<h3 class="topic-title">
								Sistemas Distribuídos
							</h3>
							<p class="topic-description">
								Consistência, observabilidade e Sagas
							</p>
							<span class="topic-count">
								{posts.filter(p => p.data.tags?.includes('sistemas-distribuidos')).length} artigos
							</span>
						</a>
						<a href="/blog?categoria=resiliencia" class="topic-card">
							<h3 class="topic-title">
								Resiliência e Performance
							</h3>
							<p class="topic-description">
								Circuit Breaker, Retry e Idempotência
							</p>
							<span class="topic-count">
								{posts.filter(p => p.data.tags?.includes('resiliencia')).length} artigos
							</span>
						</a>
						<a href="/blog?categoria=processamento-dados" class="topic-card">
							<h3 class="topic-title">
								Processamento de Dados
							</h3>
							<p class="topic-description">
								Spring Batch, AWS Glue e ETL
							</p>
							<span class="topic-count">
								{posts.filter(p => p.data.tags?.includes('processamento-dados')).length} artigos
							</span>
						</a>
						<a href="/blog?categoria=java" class="topic-card">
							<h3 class="topic-title">
								Tecnologias Java
							</h3>
							<p class="topic-description">
								Java 11+, Spring Boot e modernização
							</p>
							<span class="topic-count">
								{posts.filter(p => p.data.tags?.includes('java')).length} artigos
							</span>
						</a>
					</div>
				</section>
			</div>
		</main>
		<Footer />
		
		<style>
		.hero-section {
			padding: 4rem 0 3rem 0;
			margin-bottom: 3rem;
		}
		
		.hero-name {
			font-size: 3.5rem;
			font-weight: 700;
			color: var(--color-text-primary);
			margin-bottom: 0.5rem;
			line-height: 1.1;
		}
		
		.hero-tagline {
			font-size: 1.25rem;
			color: var(--color-text-secondary);
			font-weight: 400;
			margin: 0;
		}
		
		.topic-count {
			display: inline-block;
			margin-top: 0.75rem;
			padding: 0.25rem 0.75rem;
			background-color: var(--color-primary);
			color: var(--color-text-inverse);
			border-radius: 1rem;
			font-size: 0.75rem;
			font-weight: 600;
		}
		

		
		@media (max-width: 768px) {
			.hero-section {
				padding: 3rem 0 2rem 0;
			}
			
			.hero-name {
				font-size: 2.5rem;
			}
			
			.hero-tagline {
				font-size: 1.125rem;
			}
			

		}
		</style>


	</body>
</html>
